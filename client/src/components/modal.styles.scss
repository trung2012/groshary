.modal {
  display: flex;
  flex-direction: column;
  position: fixed;
  top: 25%;
  margin: 0 auto;
  width: 100%;
  border: .1rem solid gray;
  box-shadow: .6rem .6rem .9rem gray;
  border-radius: .3rem;
  padding: 1rem 1.5rem;
  align-self: center;
  z-index: 1;
  background: #fff;
  animation: fadeFromTop .3s ease-in-out;
}

.modal-title {
  display: flex;
  justify-content: space-between;
  padding: 1rem .5rem;
  border-bottom: .1rem solid gray;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: -1;
}

.modal-content {
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: space-around;
  margin: 2rem .5rem 1rem;
  padding: 0 1rem;
}

.modal-sub-content {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  margin: 0 auto 1rem auto;
}

.modal-text {
  margin-bottom: 2rem;
}

.modal-confirm,
.modal-dismiss {
  width: 35%;
}

.modal-buttons {
  display: flex;
  justify-content: space-around;
  margin-bottom: 1rem;

  .custom-button {
    background: unset;
  }

  .modal-dismiss {
    background: linear-gradient(to bottom,  rgba(18,133,240,1) 0%,rgba(13,104,207,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    &:hover,
    &:active {
      color: #0569dbe5;
      background: #fff;
      border: .05rem solid #0569dbe5;
    }
  }

  .modal-confirm {
    background-color: #ff5656;
    
    &:hover {
      background-color: white;
      color: #ff5656;
      border: .1rem solid #ff5656;
    }
  }
}

.modal-close {
  cursor: pointer;

  &:hover {
    color: red;
  }
}

@media screen and (min-width: 500px) {
  .modal {
    width: 80%;
  }
}

@media screen and (min-width: 600px) {
  .modal {
    width: 65%;
  }
}

@media screen and (min-width: 750px) {
  .modal {
    width: 50%;
  }
}

@media screen and (min-width: 900px) {
  .modal {
    width: 40%;
  }
  
}

@media screen and (min-width: 1184px) {
  .modal {
    width: 35%;
  }
}

@media screen and (min-width: 1367px) {
  .modal {
    width: 28%;
  }
}

@keyframes fadeFromTop {
  from {
    opacity: 0;
    transform: translateY(-5rem);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}